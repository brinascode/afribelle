{
  "name": "mongoose-error-helper",
  "description": "Error helper for mongoose error complex messages. Transform field validators into human readable arrays.",
  "version": "0.0.2",
  "author": {
    "name": "Sebastian Bromberg",
    "email": "seba@syntag.ma"
  },
  "contributors": [
    {
      "name": "Sebastian Bromberg",
      "url": "https://github.com/syntagma/"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "mongoose": "~3.6.11",
    "mocha": "~1.11.0",
    "should": "~1.2.2"
  },
  "keywords": [
    "mongoose",
    "error",
    "helper",
    "message",
    "constraint"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/syntagma/mongoose-error-helper"
  },
  "main": "./lib/mongoose-error-helper",
  "engines": {
    "node": "*"
  },
  "readme": "Mongoose Error Helper\n==================\n\nError helper for [Mongoose](http://mongoosejs.com) schemas utilising utils to transform complex messages into human language.\n\nMongoose Validator simply returns Mongoose style validation objects inside an array of messages.\n\n##Installation##\n\n\tnpm install mongoose-error-helper\n\n##Usage##\n\n\tvar errorHelper = require('mongoose-error-helper').errorHelper;\n\n\n    function (req, res, next) {\n        //generate `user` here\n        user.save(function (err) {\n            //If we have an error, call the helper, return, and pass it `next`\n            //to pass the \"user-friendly\" errors to\n            if (err) return errorHelper(err, next);\n        }\n    }\n\n\n##Error Messages Before##\n\n    { message: 'Validation failed',\n      name: 'ValidationError',\n      errors:\n       { username:\n          { message: 'Validator \"required\" failed for path username',\n            name: 'ValidatorError',\n            path: 'username',\n            type: 'required' },\n         state:\n          { message: 'Validator \"enum\" failed for path state',\n            name: 'ValidatorError',\n            path: 'state',\n            type: 'enum' },\n         email:\n          { message: 'Validator \"custom validator here\" failed for path email',\n            name: 'ValidatorError',\n            path: 'email',\n            type: 'custom validator here' },\n         age:\n          { message: 'Validator \"min\" failed for path age',\n            name: 'ValidatorError',\n            path: 'age',\n            type: 'min' } } }\n\n## Error Messages After ##\n\n    [ 'username is required.',\n      'state not an allowed value.',\n      'custom validator here',\n      'age below minimum.' ]\n    \n##Contributors##\n\nSpecial thanks to \"clarkf\" on stackoverflow for for this solution. We made it public for everybody.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/syntagma/mongoose-error-helper/issues"
  },
  "_id": "mongoose-error-helper@0.0.2",
  "dist": {
    "shasum": "016c25c64d4371495cc381d175d8ee8b22ca7227",
    "tarball": "https://registry.npmjs.org/mongoose-error-helper/-/mongoose-error-helper-0.0.2.tgz"
  },
  "_from": "mongoose-error-helper@latest",
  "_npmVersion": "1.3.5",
  "_npmUser": {
    "name": "syntagma",
    "email": "info@syntagma.com.ar"
  },
  "maintainers": [
    {
      "name": "syntagma",
      "email": "info@syntagma.com.ar"
    }
  ],
  "directories": {},
  "_shasum": "016c25c64d4371495cc381d175d8ee8b22ca7227",
  "_resolved": "https://registry.npmjs.org/mongoose-error-helper/-/mongoose-error-helper-0.0.2.tgz"
}
